proxy-providers:
  # 获取机场订阅链接内的所有节点
  🛫 我的机场 1:
    type: http
    # 机场订阅链接，使用 Clash 链接
    url: "&flag=clash"
    path: ./proxies/airport1.yaml
    interval: 43200
    # 初步筛选需要的节点，可有效减轻路由器压力，支持正则表达式，不筛选可删除此配置项
    filter: "香港|台湾|日本|韩国|新加坡|美国"
    health-check:
      enable: true
      # 未选择到当前策略组时，不会进行测试，有多个 proxy-providers 时可使用
      lazy: true
      url: "https://www.gstatic.com/generate_204"
      interval: 600

  🛫 我的机场 2:
    type: http
    url: "&flag=meta"
    path: ./proxies/airport2.yaml
    interval: 43200
    filter: "香港|台湾|日本|韩国|新加坡|美国"
    health-check:
      enable: true
      lazy: true
      url: "https://www.gstatic.com/generate_204"
      interval: 600

proxy-groups:

  - {name: 🪜 代理域名, type: select, proxies: [🚀 节点选择, 🎯 全球直连]}

  - {name: ⚡ 直连域名, type: select, proxies: [🎯 全球直连, 🚀 节点选择]}

  - {name: 🇨🇳 国内 IP, type: select, proxies: [🎯 全球直连, 🚀 节点选择]}

  - {name: 🐟 漏网之鱼, type: select, proxies: [🚀 节点选择, 🎯 全球直连]}

  - {name: 🏠 私有网络, type: select, proxies: [🎯 全球直连]}

  - {name: 🤖 人工智能, type: select, proxies: [🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点]}

  - {name: ✈️ Telegram, type: select, proxies: [🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点]}

  - {name: 🎵 TikTok, type: select, proxies: [🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点]}

  - {name: 🎥 Netflix, type: select, proxies: [🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点]}

  - {name: 📹 YouTube, type: select, proxies: [🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点]}

  - {name: 📽️ 斗鱼直播, type: select, proxies: [🎯 全球直连, 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点]}

  - {name: 📺 哔哩哔哩, type: select, proxies: [🎯 全球直连, 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点]}

  - {name: 📈 字节跳动, type: select, proxies: [🎯 全球直连, 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点]}

  - {name: 🚀 节点选择, type: select, proxies: [🇭🇰 香港节点, 🇹🇼 台湾节点, 🇯🇵 日本节点, 🇰🇷 韩国节点, 🇸🇬 新加坡节点, 🇺🇸 美国节点]}

  - {name: 🎯 全球直连, type: select, proxies: [DIRECT]}

  - {name: 🇭🇰 香港节点, type: url-test, tolerance: 100, lazy: true, use: [🛫 我的机场 1, 🛫 我的机场 2], filter: "香港"}

  # 节点负载均衡，即将请求均匀分配到多个节点上，优点是更稳定，速度可能有提升；将相同顶级域名的请求分配给策略组内的同一个代理节点；推荐在节点复用比较多的情况下使用
  - {name: 🇹🇼 台湾节点, type: load-balance, strategy: consistent-hashing, lazy: true, use: [🛫 我的机场 1, 🛫 我的机场 2], filter: "台湾"}

  - {name: 🇯🇵 日本节点, type: url-test, tolerance: 100, lazy: true, use: [🛫 我的机场 1, 🛫 我的机场 2], filter: "日本"}

  - {name: 🇰🇷 韩国节点, type: url-test, tolerance: 100, lazy: true, use: [🛫 我的机场 1, 🛫 我的机场 2], filter: "韩国"}

  - {name: 🇸🇬 新加坡节点, type: url-test, tolerance: 100, lazy: true, use: [🛫 我的机场 1, 🛫 我的机场 2], filter: "新加坡"}

  - {name: 🇺🇸 美国节点, type: url-test, tolerance: 100, lazy: true, use: [🛫 我的机场 1, 🛫 我的机场 2], filter: "美国"}

rule-providers:

  private:
    type: http
    behavior: domain
    format: 'text'
    url: "https://cdn.jsdelivr.net/gh/i1ve/clash-ruleset@release/private.txt"
    path: ./ruleset/private.txt
    interval: 86400

  openai:
    type: http
    behavior: domain
    format: 'text'
    url: "https://cdn.jsdelivr.net/gh/i1ve/clash-ruleset@release/openai.txt"
    path: ./ruleset/openai.txt
    interval: 86400

  telegram:
    type: http
    behavior: domain
    format: 'text'
    url: "https://cdn.jsdelivr.net/gh/i1ve/clash-ruleset@release/telegram.txt"
    path: ./ruleset/telegram.txt
    interval: 86400

  tiktok:
    type: http
    behavior: domain
    format: 'text'
    url: "https://cdn.jsdelivr.net/gh/i1ve/clash-ruleset@release/tiktok.txt"
    path: ./ruleset/tiktok.txt
    interval: 86400

  netflix:
    type: http
    behavior: domain
    format: 'text' # or 'text'
    url: "https://cdn.jsdelivr.net/gh/i1ve/clash-ruleset@release/netflix.txt"
    path: ./ruleset/netflix.txt
    interval: 86400

  youtube:
    type: http
    behavior: domain
    format: 'text' # or 'text'
    url: "https://cdn.jsdelivr.net/gh/i1ve/clash-ruleset@release/youtube.txt"
    path: ./ruleset/youtube.txt
    interval: 86400

  douyu:
    type: http
    behavior: domain
    format: 'text' # or 'text'
    url: "https://cdn.jsdelivr.net/gh/i1ve/clash-ruleset@release/douyu.txt"
    path: ./ruleset/douyu.txt
    interval: 86400

  bilibili:
    type: http
    behavior: domain
    format: 'text' # or 'text'
    url: "https://cdn.jsdelivr.net/gh/i1ve/clash-ruleset@release/bilibili.txt"
    path: ./ruleset/bilibili.txt
    interval: 86400

  bytedance:
    type: http
    behavior: domain
    format: 'text' # or 'text'
    url: "https://cdn.jsdelivr.net/gh/i1ve/clash-ruleset@release/bytedance.txt"
    path: ./ruleset/bytedance.txt
    interval: 86400

  gfw:
    type: http
    behavior: domain
    format: 'text' # or 'text'
    url: "https://cdn.jsdelivr.net/gh/i1ve/clash-ruleset@release/gfw.txt"
    path: ./ruleset/gfw.txt
    interval: 86400

  cn:
    type: http
    behavior: domain
    format: 'text' # or 'text'
    url: "https://cdn.jsdelivr.net/gh/i1ve/clash-ruleset@release/cn.txt"
    path: ./ruleset/cn.txt
    interval: 86400

  telegramip:
    type: http
    behavior: ipcidr
    format: 'text' # or 'text'
    url: "https://cdn.jsdelivr.net/gh/i1ve/clash-ruleset@release/telegramip.txt"
    path: ./ruleset/telegramip.txt
    interval: 86400

  nxip:
    type: http
    behavior: ipcidr
    format: 'text' # or 'text'
    url: "https://cdn.jsdelivr.net/gh/i1ve/clash-ruleset@release/nxip.txt"
    path: ./ruleset/nxip.txt
    interval: 86400

  blip:
    type: http
    behavior: ipcidr
    format: 'text' # or 'text'
    url: "https://cdn.jsdelivr.net/gh/i1ve/clash-ruleset@release/blip.txt"
    path: ./ruleset/blip.txt
    interval: 86400

  privateip:
    type: http
    behavior: ipcidr
    format: 'text' # or 'text'
    url: "https://cdn.jsdelivr.net/gh/i1ve/clash-ruleset@release/privateip.txt"
    path: ./ruleset/privateip.txt
    interval: 86400

  cnip:
    type: http
    behavior: ipcidr
    format: 'text' # or 'text'
    url: "https://cdn.jsdelivr.net/gh/i1ve/clash-ruleset@release/cnip.txt"
    path: ./ruleset/cnip.txt
    interval: 86400

rules:
  - RULE-SET,private,🏠 私有网络
  - RULE-SET,openai,🤖 人工智能  
  - RULE-SET,telegram,✈️ Telegram
  - RULE-SET,tiktok,🎵 TikTok
  - RULE-SET,netflix,🎥 Netflix
  - RULE-SET,youtube,📹 YouTube
  - RULE-SET,douyu,📽️ 斗鱼直播
  - RULE-SET,bilibili,📺 哔哩哔哩
  - RULE-SET,bytedance,📈 字节跳动
  - RULE-SET,gfw,🪜 代理域名
  - RULE-SET,cn,⚡ 直连域名
  - RULE-SET,telegramip,✈️ Telegram
  - RULE-SET,nxip,🎥 Netflix
  - RULE-SET,blip,📺 哔哩哔哩
  - RULE-SET,privateip,🏠 私有网络
  - RULE-SET,cnip,🇨🇳 国内 IP
  - MATCH,🐟 漏网之鱼